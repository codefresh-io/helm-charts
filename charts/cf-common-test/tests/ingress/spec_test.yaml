# yaml-language-server: $schema=https://raw.githubusercontent.com/quintush/helm-unittest/master/schema/helm-testsuite.json
suite: ingress spec
templates:
  - templates/ingress.yaml
tests:
  - it: Test host and path
    values:
      - values.yaml
    asserts:
      - equal:
          path: spec.rules[0].host
          value: host.domain.local
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: /path

  - it: Test default (from service) service and port
    values:
      - values.yaml
    asserts:
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: RELEASE-NAME-cf-common-test
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 80

  - it: Test override service and port
    values:
      - values.yaml
    set:
      ingress:
        main:
          hosts:
            - host: host.domain.local
              paths:
                - path: /path
                  pathType: ImplementationSpecific
                  service:
                    name: some-other-svc
                    port: 8080
    asserts:
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: some-other-svc
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 8080

  - it: Test ingress with template
    values:
      - values.yaml
    set:
      global:
        appUrl: mydomain.example.io
        apiPath: /api
        apiAddr: svc-test-tpl
        apiPort: 8081
      ingress:
        main:
          enabled: false
        tpl:
          enabled: true
          hosts:
            - host: "{{ .Values.global.appUrl }}"
              paths:
                - path: "{{ .Values.global.apiPath }}"
                  service:
                    name: "{{ .Values.global.apiAddr }}"
                    port: "{{ .Values.global.apiPort }}"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].host
          value: mydomain.example.io
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: /api
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: svc-test-tpl
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 8081

  - it: Test with no ingressClassName
    values:
      - values.yaml
    asserts:
      - isNull:
          path: spec.ingressClassName

  - it: Test with ingressClassName
    values:
      - values.yaml
    set:
      ingress:
        main:
          ingressClassName: nginx
    asserts:
      - equal:
          path: spec.ingressClassName
          value:  nginx

  - it: Test with no tls
    values:
      - values.yaml
    asserts:
      - isNull:
          path: spec.tls

  - it: Test with tls enabled
    values:
      - values.yaml
    set:
      ingress:
        main:
          tls:
            - secretName: secret-example-tls
              hosts:
                - host.domain.local
    asserts:
      - contains:
          path: spec.tls
          content:
            secretName: secret-example-tls
            hosts:
              - host.domain.local

  - it: Test with tls enabled with template
    values:
      - values.yaml
    set:
      global:
        appUrl: mydomain.example.io
        secretName: secret-example-tls-tpl
      ingress:
        main:
          tls:
            - secretName: "{{ .Values.global.secretName }}"
              hosts:
                - "{{ .Values.global.appUrl }}"
    asserts:
      - contains:
          path: spec.tls
          content:
            secretName: secret-example-tls-tpl
            hosts:
              - mydomain.example.io

  - it: Test with multiple ingress
    values:
      - values.yaml
    set:
      ingress:
        second:
          enabled: true
          hosts:
            - host: host.domain.local
              paths:
                - path: /another/path
                  pathType: ImplementationSpecific
                  service:
                    name: svc-test
                    port: 8081
    asserts:
      - hasDocuments:
          count: 2
      - isKind:
          of: Ingress
        documentIndex: 0
      - isKind:
          of: Ingress
        documentIndex: 1

  - it: Test multiple paths
    values:
      - values.yaml
    set:
      ingress:
        main:
          hosts:
          - host: host.domain.local
            paths:
              - path: /path/one
                service:
                  name: svc-test-one
                  port: 8080
              - path: /path/two
                service:
                  name: svc-test-two
                  port: 8081
    asserts:
      - lengthEqual:
          path: spec.rules[0].http.paths
          count: 2

  - it: Test multiple hosts
    values:
      - values.yaml
    set:
      ingress:
        main:
          hosts:
          - host: host-one.domain.local
            paths:
              - path: /path/one
                service:
                  name: svc-test-one
                  port: 8080
          - host: host-two.domain.local
            paths:
              - path: /path/two
                service:
                  name: svc-test-two
                  port: 8081
    asserts:
      - lengthEqual:
          path: spec.rules
          count: 2

  - it: Test with no ingresses
    values:
      - values.yaml
    set:
      ingress:
        main:
          enabled: false
    asserts:
      - hasDocuments:
          count: 0
