# yaml-language-server: $schema=https://raw.githubusercontent.com/quintush/helm-unittest/master/schema/helm-testsuite.json
suite: mongodb env vars
templates:
  - templates/controller.yaml
  - templates/secret.yaml
tests:
  - it: Test MONGODB_* env vars from default secret
    values:
      - values.yaml
    template: templates/controller.yaml
    set:
      global:
        mongoURI: ""
        mongodbProtocol: mongodb+srv
        mongodbUser: cfuser
        mongodbPassword: cfpassword
        mongodbHost: mongodb0.example.com:27017
        mongodbOptions: retryWrites=true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGODB_PROTOCOL
            value: mongodb+srv
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-cf-common-test-secret
                key: MONGODB_USER
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-cf-common-test-secret
                key: MONGODB_PASSWORD
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGODB_HOST
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-cf-common-test-secret
                key: MONGODB_HOST
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGODB_OPTIONS
            value: retryWrites=true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGO_URI
            value: $(MONGODB_PROTOCOL)://$(MONGODB_USER):$(MONGODB_PASSWORD)@$(MONGODB_HOST)/$(MONGODB_DATABASE)?$(MONGODB_OPTIONS)
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGO_URI
            value: $(MONGODB_PROTOCOL)://$(MONGODB_USER):$(MONGODB_PASSWORD)@$(MONGODB_HOST)/$(MONGODB_DATABASE)?$(MONGODB_OPTIONS)
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGO_URI_ANNOTATION
            value: $(MONGO_URI)
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGO_URI_ARCHIVE
            value: $(MONGODB_PROTOCOL)://$(MONGODB_USER):$(MONGODB_PASSWORD)@$(MONGODB_HOST)/$(MONGODB_DATABASE_ARCHIVE)?$(MONGODB_OPTIONS)

  - it: Test MONGODB_* env vars from custom secret
    values:
      - values.yaml
    template: templates/controller.yaml
    set:
      global:
        mongoURI: ""
        mongodbProtocol: mongodb+srv
        mongodbUserSecretKeyRef:
          name: my-mongodb-secret
          key: mongodb-user
        mongodbPasswordSecretKeyRef:
          name: my-mongodb-secret
          key: mongodb-password
        mongodbHostSecretKeyRef:
          name: my-mongodb-secret
          key: mongodb-host
        mongodbOptions: retryWrites=true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGODB_PROTOCOL
            value: mongodb+srv
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                name: my-mongodb-secret
                key: mongodb-user
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-mongodb-secret
                key: mongodb-password
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGODB_HOST
            valueFrom:
              secretKeyRef:
                name: my-mongodb-secret
                key: mongodb-host
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGODB_OPTIONS
            value: retryWrites=true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGO_URI
            value: $(MONGODB_PROTOCOL)://$(MONGODB_USER):$(MONGODB_PASSWORD)@$(MONGODB_HOST)/$(MONGODB_DATABASE)?$(MONGODB_OPTIONS)
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGO_URI
            value: $(MONGODB_PROTOCOL)://$(MONGODB_USER):$(MONGODB_PASSWORD)@$(MONGODB_HOST)/$(MONGODB_DATABASE)?$(MONGODB_OPTIONS)

  - it: Test with legacy global.mongoURI present
    values:
      - values.yaml
    set:
      global:
        mongoURI: "mongodb+srv://cfuser:cfpassword@mongodb0.example.com:27017/retryWrites=true"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MONGO_URI
            value: $(MONGO_URI)
        template: templates/controller.yaml
      - equal:
          path: stringData.MONGO_URI
          value: mongodb+srv://cfuser:cfpassword@mongodb0.example.com:27017/retryWrites=true
        template: templates/secret.yaml
