# yaml-language-server: $schema=https://raw.githubusercontent.com/quintush/helm-unittest/master/schema/helm-testsuite.json
suite: rabbitmq env vars
templates:
  - templates/controller.yaml
  - templates/secret.yaml
tests:
  - it: Test RABBITMQ_* env vars from default secret
    values:
      - values.yaml
    template: templates/controller.yaml
    set:
      global:
        rabbitmqHostname: "rabbitmq0.example.com"
        rabbitmqPassword: "cfpassword"
        rabbitmqProtocol: "amqps"
        rabbitmqUsername: "cfuser"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RABBITMQ_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-cf-common-test-secret
                key: RABBITMQ_HOSTNAME
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-cf-common-test-secret
                key: RABBITMQ_PASSWORD
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RABBITMQ_USERNAME
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-cf-common-test-secret
                key: RABBITMQ_USERNAME
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RABBITMQ_PROTOCOL
            value: "amqps"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RABBIT_URL
            value: $(RABBITMQ_PROTOCOL)://$(RABBITMQ_USERNAME):$(RABBITMQ_PASSWORD)@$(RABBITMQ_HOSTNAME)

  - it: Test RABBITMQ_* env vars from custom secret
    values:
      - values.yaml
    template: templates/controller.yaml
    set:
      global:
        rabbitmqHostnameSecretKeyRef:
          name: my-rabbitmq-secret
          key: rabbitmq-hostname
        rabbitmqPasswordSecretKeyRef:
          name: my-rabbitmq-secret
          key: rabbitmq-password
        rabbitmqProtocol: "amqps"
        rabbitmqUsernameSecretKeyRef:
          name: my-rabbitmq-secret
          key: rabbitmq-username
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RABBITMQ_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: my-rabbitmq-secret
                key: rabbitmq-hostname
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-rabbitmq-secret
                key: rabbitmq-password
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RABBITMQ_USERNAME
            valueFrom:
              secretKeyRef:
                name: my-rabbitmq-secret
                key: rabbitmq-username
                optional: true
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RABBITMQ_PROTOCOL
            value: "amqps"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RABBIT_URL
            value: $(RABBITMQ_PROTOCOL)://$(RABBITMQ_USERNAME):$(RABBITMQ_PASSWORD)@$(RABBITMQ_HOSTNAME)
