# Defines if library mode is used for the chart. No templates are generated when using this mode.
# Added to support usage in Codefresh On-Premise Helm chart
libraryMode: false

# -- Codefresh platform settings
# List of services endpoints and port
# @default -- See below
codefresh:
  cfapi-auth-svc: cfapi-auth
  cfapi-auth-port: 80

  cfapi-endpoints-svc: cfapi-endpoints
  cfapi-endpoints-port: 80

  cfapi-environments-svc: cfapi-environments
  cfapi-environments-port: 80

  cfapi-downloadlogmanager-svc: cfapi-downloadlogmanager
  cfapi-downloadlogmanager-port: 80

  cfapi-gitops-resource-receiver-svc: cfapi-gitops-resource-receiver
  cfapi-gitops-resource-receiver-port: 80

  cfapi-test-reporting-svc: cfapi-test-reporting
  cfapi-test-reporting-port: 80

  cfapi-kubernetesresourcemonitor-svc: cfapi-kubernetesresourcemonitor
  cfapi-kubernetesresourcemonitor-port: 80

  cfapi-kubernetes-endpoints-svc: cfapi-kubernetes-endpoints
  cfapi-kubernetes-endpoints-port: 80

  cfapi-admin-svc: cfapi-admin
  cfapi-admin-port: 80

  cfapi-teams-svc: cfapi-teams
  cfapi-teams-port: 80

  cfapi-ws-svc: cfapi-ws
  cfapi-ws-port: 80

  cfui-svc: cfui
  cfui-port: 80

  argo-platform-api-graphql-svc: argo-platform-api-graphql
  argo-platform-api-graphql-port: 80

  argo-platform-api-events-svc: argo-platform-api-events
  argo-platform-api-events-port: 80

  argo-platform-ui-svc: argo-platform-ui
  argo-platform-ui-port: 4200

  argo-platform-broadcaster-svc: argo-platform-broadcaster
  argo-platform-broadcaster-port: 80

  argo-hub-svc: argo-hub-platform
  argo-hub-port: 80

  nomios-svc: nomios
  nomios-port: 80

  jira-addon-svc: cf-jira-addon
  jira-addon-port: 9000

  workflow-logs-s3-proxy-domain: logs.sandbox-1.codefresh.io
  workflow-logs-s3-proxy-svc: workflow-logs-s3-proxy
  workflow-logs-s3-proxy-port: 80

  # -- Override defaults here!
  serviceEndpoints:
    cfapi-auth: {}
    cfapi-endpoints: {}
    cfapi-environments: {}
    cfapi-downloadlogmanager: {}
    cfapi-gitops-resource-receiver: {}
    cfapi-test-reporting: {}
    cfapi-kubernetesresourcemonitor: {}
    cfapi-kubernetes-endpoints: {}
    cfapi-admin: {}
    cfapi-teams: {}
    cfapi-ws: {}
    cfui: {}
    argo-platform-api-graphql: {}
    argo-platform-api-events: {}
    argo-platform-ui: {}
  # E.g.
  # serviceEndpoints:
  #   cfapi-endpoints:
  #     svc: full-svc-nameoverride.namespace.svc.cluster.local
  #     port: 80

## See full values structure at https://github.com/codefresh-io/helm-charts/blob/master/charts/cf-common/values.yaml
# -- Global parameters
# @default -- See below
global:
  # -- configures cluster domain ("cluster.local" by default)
  clusterDomain: "cluster.local"
  # -- configures DNS service name
  dnsService: "kube-dns"
  # -- configures DNS service namespace
  dnsNamespace: "kube-system"

# -- Ingress parameters
# @default -- See below
ingress:
  main:
    enabled: false
    ingressClassName: ""
    hosts: []

nginx:
  config:
    # -- Defines the number of worker processes.
    workerProcesses: "8"
    # -- Sets the maximum number of simultaneous connections that can be opened by a worker process.
    workerConnections: "16384"
    # -- Changes the limit on the largest size of a core file (RLIMIT_CORE) for worker processes. Used to increase the limit without restarting the main process.
    workerRlimitNofile: "1047552"
    # -- Enable logging of 2xx and 3xx HTTP requests
    verboseLogging: false
    # -- NGINX log format
    logFormat: |-
      main escape=json '{ "time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x-forward-for": "$proxy_add_x_forwarded_for", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time, "method": "$request_method", "http_referrer": "$http_referer", "http_user_agent": "$http_user_agent", "http_x_github_delivery": "$http_x_github_delivery", "http_x_hook_uuid": "$http_x_hook_uuid", "metadata": { "correlationId": "$request_id", "service": "ingress", "time": "$time_iso8601" } }';
    # E.g.
    # logFormat: |-
    #   main '$remote_addr - $remote_user [$time_local]  $status '
    #           '"$request" $body_bytes_sent "$http_referer" '
    #           '"$http_user_agent" "$http_x_forwarded_for"';

    # -- Sets the log level of the NGINX error log. One of `debug`, `info`, `notice`, `warn`, `error`, `crit`, `alert`, or `emerg`
    errorLogLevel: error
    # -- Enables NGINX access logs
    accessLogEnabled: true
    # -- Allows appending custom directives to the root block (string)
    rootSnippet: ""
    # -- Allows appending custom directives to the root block (map)
    rootDirectives:
      load_module: modules/ngx_http_js_module.so
    # -- Allows appending custom configuration to the server block (string)
    serverSnippet: ""
    # -- Allows appending custom directives to the server block (map)
    serverDirectives: {}
    # -- Allows appending custom configuration to the http block (string)
    httpSnippet: ""
    # -- Allows appending custom directives to the http block (map)
    httpDirectives: {}
    # -- Allows appending custom configuration to the location blocks (string)
    locationSnippet: ""
    # -- Allows appending custom directives to the location blocks (map)
    locationDirectives: {}
    # -- Allow add custom locations
    locations: {}
    # -- Allows to set a custom resolver
    resolver: null
    # -- Config file contents for Nginx. Passed through the `tpl` function to allow templating.
    # !! Moved into separate template at `templates/nginx/configmap.yaml`
    # @default -- See below
    file: ""
  # -- Path to NJS scripts
  scriptFilesPatterns:
  - files/njs/**
  extraConfigsPatterns:
  - files/conf.d/**

# -- Misc signadot configuration
signadot: false

# -- Controller parameters
# @default -- See below
controller:
  enabled: true
  type: deployment
  replicas: 2
  deployment:
    strategy: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: "50%"

# -- Pod annotations
# @default -- See below
podAnnotations:
  checksum/config: '{{ include (printf "cf-common-%s.tplrender" (index .Subcharts "cf-common").Chart.Version) (dict "Values" .Values.nginx.config "context" $) | sha256sum }}'
  checksum/endpoints: '{{ include (printf "cf-common-%s.tplrender" (index .Subcharts "cf-common").Chart.Version) (dict "Values" .Values.codefresh "context" $) | sha256sum }}'

# -- Pod Security Context parameters
# @default -- See below
podSecurityContext:
  fsGroup: 101
  runAsGroup: 101
  runAsNonRoot: true
  runAsUser: 101

# -- Main container parameters
# @default -- See below
container:
  image:
    registry: docker.io
    repository: nginxinc/nginx-unprivileged
    tag: 1.27-alpine

  env: {}
  envFrom: []

  volumeMounts:
    config:
      path:
      - mountPath: /etc/nginx/nginx.conf
        subPath: nginx.conf
    # extra-configs:
    #   path:
    #   - mountPath: /etc/nginx/conf.d
    njs-scripts:
      path:
      - mountPath: /etc/nginx/scripts

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 1000m
      memory: 2Gi

  probes:
    readiness:
      enabled: true
      type: tcpSocket
      tcpSocket:
        port: http
      httpGet:
        path: /ready
        port: http
      spec:
        initialDelaySeconds: 15
        timeoutSeconds: 3
        periodSeconds: 5
        failureThreshold: 3
        successThreshold: 1
    liveness:
      enabled: true
      type: tcpSocket
      tcpSocket:
        port: http
      httpGet:
        path: /health
        port: http
      spec:
        initialDelaySeconds: 30
        timeoutSeconds: 3
        periodSeconds: 5
        failureThreshold: 3
        successThreshold: 1

# -- Container security context parameters
# @default -- See below
containerSecurityContext:
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
  allowPrivilegeEscalation: false

# -- Service parameters
# @default -- See below
service:
  main:
    enabled: true
    primary: true
    type: ClusterIP
    ports:
      http:
        port: 80
        protocol: HTTP
        targetPort: 8080

# -- Volumes parameters
# @default -- See below
volumes:
  config:
    enabled: true
    type: configMap
  extra-configs:
    enabled: true
    type: configMap
  njs-scripts:
    enabled: true
    type: configMap

# -- HPA parameters
# @default -- See below
hpa:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetMemoryUtilizationPercentage: 70
  targetCPUUtilizationPercentage: 70

# -- PDB parameters
# @default -- See below
pdb:
  enabled: false
  minAvailable: "50%"

# -- Topologe Spread Constraints parameters
# @default -- See below
topologySpreadConstraints: |
  - maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: ScheduleAnyway
    labelSelector:
      matchLabels:
        {{- include "internal-gateway.selectorLabels" . | nindent 6 }}
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: ScheduleAnyway
    labelSelector:
      matchLabels:
        {{- include "internal-gateway.selectorLabels" . | nindent 6 }}

# -- Service Account parameters
# @default -- See below
serviceAccount:
  enabled: false

# -- RBAC parameters
# @default -- See below
rbac:
  enabled: false

keda:
  enabled: false
